% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alpha_fd_multidim.R
\name{alpha.fd.multidim}
\alias{alpha.fd.multidim}
\title{Compute a set of alpha functional indices for a set of assemblages}
\usage{
alpha.fd.multidim(
  sp_faxes_coord,
  asb_sp_w,
  ind_vect = c("fide", "fdis", "fmpd", "fnnd", "feve", "fric", "fdiv", "fori", "fspe"),
  scaling = TRUE,
  check_input = TRUE,
  details_returned = TRUE
)
}
\arguments{
\item{sp_faxes_coord}{a \strong{matrix} of species coordinates in a chosen functional
space. Species coordinates have been retrieved thanks to
\code{\link{tr.cont.fspace}} or \code{\link{quality.fspaces}}.}

\item{asb_sp_w}{a \strong{matrix} linking weight of species (columns) and a set of
assemblages (rows).}

\item{ind_vect}{a \strong{vector} of character string of the name of functional indices
to compute. \strong{Indices names must be written in lower case letters}.
Possible indices to compute are: "fide", fdis", "fmpd", "fnnd", "feve", "fric",
"fdiv", "fori" and "fspe". Default: all the indices are computed.}

\item{scaling}{a \strong{logical value} indicating if scaling is to be done (TRUE) or
not (FALSE) on functional indices. Scaling is used to be able to compare
indices values between assemblages. Default: scaling = TRUE.}

\item{check_input}{a \strong{logical value} defining whether inputs are checked before
computation of indices. Possible error messages will thus may be more
understandable for the user than R error messages. Default: check_input =
TRUE.}

\item{details_returned}{a \strong{logical value} indicating whether the user want to store
details. Details are used in graphical functions and thus must be kept if
the user want to have graphical outputs for the computed indices.}
}
\value{
a list with: \itemize{

\item \emph{functional_diversity_indices} matrix containing indices values
(columns) for each assemblage (rows)

\item \emph{details} list: a \strong{asb_sp_occ} data.frame of species
occurrences in each assemblage ; a \strong{asb_sp_relatw} matrix of
relative weight of species in each assemblage ; a \strong{sp_coord_all_asb}
list of matrices of species coordinates along functional axes for species
present in each assemblage ; a \strong{vert_nm_all_asb} list of vectors of
species names being vertices of the convex hull for each assemblage ; a
\strong{mst_all_asb} list of data.frames summarizing link between species in
the minimum spanning tree of each assemblage ; a
\strong{grav_center_vert_coord_all_asb} list of vectors of coordinates of
the vertices gravity center for each assemblage ; a
\strong{mean_dtogravcenter_all_asb} list of vectors containing mean distance
to the species gravity center for each assemblage ; a
\strong{dist_gravcenter_global_pool} vector containing the distance of each
species to the gravity center of all species from the global pool ; a
\strong{dist_nn_global_pool} data.frame showing the distances of each
species from the global pool to its nearest neighbor ; a
\strong{nm_nn_all_asb} data.frame containing the name of each nearest
neighbor of each species present in a given assemblage ; a
\strong{dist_nn_all_asb} data.frame containing distance of each species
present in a given assemblage to its nearest neighbor.}
}
\description{
Compute a set of multidimensional space based indices of alpha functional
diversity. The user can choose which functional indices to compute.
}
\examples{
# Load Species*Traits dataframe:
data("sp_tr_fruits", package = "mFD")
# Load Assemblages*Species dataframe:      
data("asb_sp_w_fruits", package = "mFD")
# Load Traits categories dataframe:
data("tr_cat_fruits", package = "mFD")   
# Compute functional distance 
sp_dist_fruits <- mFD::funct.dist(sp_tr = sp_tr_fruits,         
 tr_cat       = tr_cat_fruits,   
 dist_metric  = "kgower",         
 scaling      = "scaledBYrange",  
 stop_if_NA   = TRUE)
# Compute functional spaces quality to retrieve species coordinates matrix:
fspaces_quality_fruits <- mFD::quality.fspaces(sp_dist = sp_dist_fruits, 
 maxdim_pcoa         = 10,
 deviation_weighting = "absolute",
 fdist_scaling       = FALSE,
 fdendro             = "average")
# Retrieve species coordinates matrix:
sp_faxes_coord_fruits <- fspaces_quality_fruits$"details_fspaces"$"sp_pc_coord"
# Compute alpha diversity indices:
alpha_fd_indices_fruits <- mFD::alpha.fd.multidim(
 sp_faxes_coord_fruits[, c("PC1", "PC2", "PC3", "PC4")],
 asb_sp_w_fruits, ind_vect = c("fdis", "fmpd", "fnnd", "feve", "fric", "fdiv", "fori", "fspe"),
 scaling = TRUE, check_input = TRUE, details_returned = TRUE)
# Retrieve alpha diversity indices table:
fd_ind_values_fruits <- alpha_fd_indices_fruits$functional_diversity_indices
fd_ind_values_fruits

}
